// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "book/userapi/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	RegisterEndpoint    endpoint.Endpoint
	LoginEndpoint       endpoint.Endpoint
	GetUserInfoEndpoint endpoint.Endpoint
	TestEndpoint        endpoint.Endpoint
	TestApiEndpoint     endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.UserapiService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetUserInfoEndpoint: MakeGetUserInfoEndpoint(s),
		LoginEndpoint:       MakeLoginEndpoint(s),
		RegisterEndpoint:    MakeRegisterEndpoint(s),
		TestApiEndpoint:     MakeTestApiEndpoint(s),
		TestEndpoint:        MakeTestEndpoint(s),
	}
	for _, m := range mdw["Register"] {
		eps.RegisterEndpoint = m(eps.RegisterEndpoint)
	}
	for _, m := range mdw["Login"] {
		eps.LoginEndpoint = m(eps.LoginEndpoint)
	}
	for _, m := range mdw["GetUserInfo"] {
		eps.GetUserInfoEndpoint = m(eps.GetUserInfoEndpoint)
	}
	for _, m := range mdw["Test"] {
		eps.TestEndpoint = m(eps.TestEndpoint)
	}
	for _, m := range mdw["TestApi"] {
		eps.TestApiEndpoint = m(eps.TestApiEndpoint)
	}
	return eps
}
