// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "book/user/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	RegisterEndpoint        endpoint.Endpoint
	UserInfoByIdEndpoint    endpoint.Endpoint
	UserInfoByPhoneEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.UserService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		RegisterEndpoint:        MakeRegisterEndpoint(s),
		UserInfoByIdEndpoint:    MakeUserInfoByIdEndpoint(s),
		UserInfoByPhoneEndpoint: MakeUserInfoByPhoneEndpoint(s),
	}
	for _, m := range mdw["Register"] {
		eps.RegisterEndpoint = m(eps.RegisterEndpoint)
	}
	for _, m := range mdw["UserInfoById"] {
		eps.UserInfoByIdEndpoint = m(eps.UserInfoByIdEndpoint)
	}
	for _, m := range mdw["UserInfoByPhone"] {
		eps.UserInfoByPhoneEndpoint = m(eps.UserInfoByPhoneEndpoint)
	}
	return eps
}
