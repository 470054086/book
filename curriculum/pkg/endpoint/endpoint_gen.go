// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "book/curriculum/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CurriculumListEndpoint endpoint.Endpoint
	CurriculumEndpoint     endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.CurriculumService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CurriculumEndpoint:     MakeCurriculumEndpoint(s),
		CurriculumListEndpoint: MakeCurriculumListEndpoint(s),
	}
	for _, m := range mdw["CurriculumList"] {
		eps.CurriculumListEndpoint = m(eps.CurriculumListEndpoint)
	}
	for _, m := range mdw["Curriculum"] {
		eps.CurriculumEndpoint = m(eps.CurriculumEndpoint)
	}
	return eps
}
